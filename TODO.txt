Current (miopic) list:
	- Add specialization of rewrites by list of vars
	- Make constants e and pi remain as such (instead of converting to double when eval)

Longer / Maybe:
	- fix conversion of constant to expr (??) -- how to have exprs of exprs then?
	- Add ability of ops to pertain only to a particular type (for real)
	- Add "domain" of exprs
	- Add comparison operators (maybe redo switches in that case?)
	- Add "min" and "max" to scalars (using switches)
	- Add matrices
	* Add ranges / sets ? (partially done)
	- Add trig functions (or just use complex numbers?)
	- Add opaque functions

Done:
	- Redo der and int to be operators with rewrite rules
	- Add "switch" rewrites to scalarrewrite.hpp
	- Add "local scope"
	- add abs as base function 
	- convert "switch" to multiplication by step-indicator fn
	- Use boost::rational<???> instead of double for scalars (convert double => rational?)
